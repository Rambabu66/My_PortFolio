{"ast":null,"code":"var _jsxFileName = \"E:\\\\RSD-REACT-PROJECTS\\\\Portfolio-fullproject\\\\client\\\\src\\\\components\\\\adminpages\\\\ProjectPage\\\\UpdateProjectModal.js\",\n  _s = $RefreshSig$();\n// e:\\RSD-REACT-PROJECTS\\Portfolio-fullproject\\client\\src\\components\\adminpages\\ProjectPage\\UpdateProjectModal.js\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form, Alert, Spinner, Image, CloseButton } from 'react-bootstrap'; // Added Image, CloseButton\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { updateProject } from '../../../features/products/projectSlice';\n\n// Helper to convert array to comma-separated string for form fields\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst arrayToCommaString = arr => Array.isArray(arr) ? arr.join(', ') : arr || '';\nconst UpdateProjectModal = ({\n  show,\n  handleClose,\n  projectData\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const initialFormData = {\n    projectName: '',\n    projectDescription: '',\n    projectGitHubLink: '',\n    projectLiveLink: '',\n    projectTechStack: '',\n    projectFeatures: ''\n  };\n  const [updatedProjectData, setUpdatedProjectData] = useState(initialFormData);\n  // State for new files to upload\n  const [newProjectFiles, setNewProjectFiles] = useState([]);\n  // State to track which existing images to delete\n  const [imagesToDelete, setImagesToDelete] = useState([]);\n  // State to display current images (filtered by imagesToDelete)\n  const [currentImages, setCurrentImages] = useState([]);\n  const [isSaving, setIsSaving] = useState(false);\n\n  // --- Populate form when projectData changes (modal opens) ---\n  useEffect(() => {\n    if (projectData) {\n      console.log(\"Project Data Received:\", projectData); // Debug log\n      setUpdatedProjectData({\n        projectName: projectData.projectName || '',\n        projectDescription: projectData.projectDescription || '',\n        projectGitHubLink: projectData.projectGitHubLink || '',\n        projectLiveLink: projectData.projectLiveLink || '',\n        projectTechStack: arrayToCommaString(projectData.projectTechStack),\n        projectFeatures: arrayToCommaString(projectData.projectFeatures)\n      });\n      // Initialize current images and reset deletions/new files\n      setCurrentImages(projectData.projectMultiImages || []);\n      setImagesToDelete([]);\n      setNewProjectFiles([]);\n      setIsSaving(false);\n    } else {\n      // Reset when projectData is null (e.g., modal closed improperly)\n      setUpdatedProjectData(initialFormData);\n      setCurrentImages([]);\n      setImagesToDelete([]);\n      setNewProjectFiles([]);\n    }\n  }, [projectData]); // Re-run effect when projectData prop changes\n  // -----------------------------------------------------------\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedProjectData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Handle new file input\n  const handleFileChange = e => {\n    setNewProjectFiles(Array.from(e.target.files)); // Store as an array\n  };\n\n  // Handle marking an existing image for deletion\n  const handleMarkForDelete = imageIdentifier => {\n    // Use the unique identifier (e.g., URL or public_id)\n    console.log(\"Marking for delete:\", imageIdentifier); // Debug log\n    setImagesToDelete(prev => [...prev, imageIdentifier]);\n    // Visually remove it from the displayed current images\n    setCurrentImages(prev => prev.filter(img => (img.public_id || img.url) !== imageIdentifier));\n  };\n  const validateForm = () => {\n    if (!updatedProjectData.projectName || !updatedProjectData.projectDescription) {\n      toast.error('Project Name and Description are required.');\n      return false;\n    }\n    if (!(projectData !== null && projectData !== void 0 && projectData._id)) {\n      toast.error('Cannot update project without a valid ID.');\n      return false;\n    }\n    return true;\n  };\n  const handleSaveChanges = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setIsSaving(true);\n\n    // --- Create Payload using FormData ---\n    const formData = new FormData();\n\n    // Append text fields\n    Object.keys(updatedProjectData).forEach(key => {\n      // Handle potential arrays from comma-separated strings if needed by backend\n      if (key === 'projectTechStack' || key === 'projectFeatures') {\n        // Example: Split string into an array before sending if backend expects array\n        // const valueArray = updatedProjectData[key].split(',').map(item => item.trim()).filter(Boolean);\n        // valueArray.forEach(item => formData.append(`${key}[]`, item));\n        // Or append the string directly if backend handles splitting/parsing\n        formData.append(key, updatedProjectData[key]);\n      } else {\n        formData.append(key, updatedProjectData[key]);\n      }\n    });\n\n    // Append new files if any\n    // 'newProjectMultiImages' should match the field name your backend expects for *new* uploads\n    if (newProjectFiles.length > 0) {\n      for (let i = 0; i < newProjectFiles.length; i++) {\n        formData.append('newProjectMultiImages', newProjectFiles[i]);\n      }\n    }\n\n    // Append IDs/URLs of images to delete (backend needs to parse this)\n    // Sending as JSON string is common\n    if (imagesToDelete.length > 0) {\n      formData.append('imagesToDelete', JSON.stringify(imagesToDelete));\n    }\n    // ----------------------\n\n    // Log FormData contents (for debugging)\n    console.log(\"Updating project with FormData:\");\n    for (let [key, value] of formData.entries()) {\n      console.log(key, value);\n    }\n    console.log(\"Project ID:\", projectData._id);\n    try {\n      // Dispatch the updateProject action\n      // The thunk needs to handle FormData and send the ID correctly (e.g., in URL)\n      // In UpdateProjectModal.js\n      await dispatch(updateProject({\n        id: projectData._id,\n        updates: formData\n      })).unwrap();\n      toast.success(\"Project updated successfully!\");\n      handleModalClose(); // Close modal on success\n    } catch (error) {\n      console.error(\"Failed to update project:\", error);\n      // Attempt to get a more specific error message\n      const errorMessage = (error === null || error === void 0 ? void 0 : error.message) || (typeof error === 'string' ? error : \"Failed to update project. Check console.\");\n      toast.error(errorMessage);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Use a separate close handler for this modal\n  const handleModalClose = () => {\n    // Reset local state before calling parent handler\n    setUpdatedProjectData(initialFormData);\n    setNewProjectFiles([]);\n    setImagesToDelete([]);\n    setCurrentImages([]); // Clear displayed images\n    setIsSaving(false);\n    handleClose(); // Call parent close handler\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleModalClose,\n    size: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Update Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: !projectData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 50\n        }, this), \" Loading data...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSaveChanges,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"updateFormProjectName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"projectName\",\n              value: updatedProjectData.projectName,\n              onChange: handleInputChange,\n              required: true,\n              disabled: isSaving\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"updateFormProjectDescription\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"projectDescription\",\n              value: updatedProjectData.projectDescription,\n              onChange: handleInputChange,\n              required: true,\n              disabled: isSaving\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"updateFormProjectGitHubLink\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"GitHub Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"url\",\n              placeholder: \"https://github.com/...\",\n              name: \"projectGitHubLink\",\n              value: updatedProjectData.projectGitHubLink,\n              onChange: handleInputChange,\n              disabled: isSaving\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"updateFormProjectLiveLink\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Live Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"url\",\n              placeholder: \"https://yourproject.com\",\n              name: \"projectLiveLink\",\n              value: updatedProjectData.projectLiveLink,\n              onChange: handleInputChange,\n              disabled: isSaving\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"updateFormProjectTechStack\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Tech Stack (comma-separated)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"React, Node.js, MongoDB\",\n              name: \"projectTechStack\",\n              value: updatedProjectData.projectTechStack,\n              onChange: handleInputChange,\n              disabled: isSaving\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"updateFormProjectFeatures\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Features (comma-separated)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Feature 1, Feature 2\",\n              name: \"projectFeatures\",\n              value: updatedProjectData.projectFeatures,\n              onChange: handleInputChange,\n              disabled: isSaving\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"updateFormProjectImages\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Current Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-wrap align-items-start\",\n              children: currentImages && currentImages.length > 0 ? currentImages.map((img, index) => {\n                // Determine the unique key/identifier for deletion\n                const imageIdentifier = img.public_id || img.url || `img-${index}`; // Fallback key\n                const imageUrl = img.url || img; // Handle if structure is just array of URLs\n\n                // Ensure we have a valid URL before rendering\n                if (!imageUrl) {\n                  console.warn(\"Skipping image render due to missing URL:\", img);\n                  return null;\n                }\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"position-relative me-2 mb-2 border p-1\",\n                  children: [/*#__PURE__*/_jsxDEV(Image, {\n                    src: imageUrl,\n                    alt: `Current project image ${index + 1}`,\n                    thumbnail: true,\n                    style: {\n                      width: '100px',\n                      height: 'auto',\n                      objectFit: 'cover'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n                    className: \"position-absolute top-0 end-0 bg-danger bg-opacity-75 text-white rounded-circle p-1\",\n                    style: {\n                      transform: 'translate(30%, -30%)',\n                      width: '1.2rem',\n                      height: '1.2rem',\n                      lineHeight: '0.5'\n                    },\n                    title: \"Mark for deletion\",\n                    onClick: () => handleMarkForDelete(imageIdentifier),\n                    disabled: isSaving,\n                    \"aria-label\": \"Mark image for deletion\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 53\n                  }, this)]\n                }, imageIdentifier, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 49\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"No current images.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"mt-3\",\n              children: \"Add New Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              onChange: handleFileChange,\n              multiple: true,\n              disabled: isSaving\n              // Add accept attribute for better UX\n              ,\n              accept: \"image/png, image/jpeg, image/gif, image/webp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), newProjectFiles.length > 0 && /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: [newProjectFiles.length, \" new file(s) selected. Previous images marked for deletion will be removed upon saving.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-end mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleModalClose,\n              className: \"me-2\",\n              disabled: isSaving,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              disabled: isSaving,\n              children: isSaving ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                  as: \"span\",\n                  animation: \"border\",\n                  size: \"sm\",\n                  role: \"status\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 51\n                }, this), \" Saving...\"]\n              }, void 0, true) : 'Save Changes'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateProjectModal, \"bN2EEvsmwI0A6w2fIWHtWVyHeYM=\", false, function () {\n  return [useDispatch];\n});\n_c = UpdateProjectModal;\nexport default UpdateProjectModal;\nvar _c;\n$RefreshReg$(_c, \"UpdateProjectModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","Alert","Spinner","Image","CloseButton","useDispatch","toast","updateProject","jsxDEV","_jsxDEV","Fragment","_Fragment","arrayToCommaString","arr","Array","isArray","join","UpdateProjectModal","show","handleClose","projectData","_s","dispatch","initialFormData","projectName","projectDescription","projectGitHubLink","projectLiveLink","projectTechStack","projectFeatures","updatedProjectData","setUpdatedProjectData","newProjectFiles","setNewProjectFiles","imagesToDelete","setImagesToDelete","currentImages","setCurrentImages","isSaving","setIsSaving","console","log","projectMultiImages","handleInputChange","e","name","value","target","prevData","handleFileChange","from","files","handleMarkForDelete","imageIdentifier","prev","filter","img","public_id","url","validateForm","error","_id","handleSaveChanges","preventDefault","formData","FormData","Object","keys","forEach","key","append","length","i","JSON","stringify","entries","id","updates","unwrap","success","handleModalClose","errorMessage","message","onHide","size","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","animation","onSubmit","Group","controlId","Label","Control","type","onChange","required","disabled","as","rows","placeholder","map","index","imageUrl","warn","src","alt","thumbnail","style","width","height","objectFit","transform","lineHeight","title","onClick","multiple","accept","Text","variant","role","_c","$RefreshReg$"],"sources":["E:/RSD-REACT-PROJECTS/Portfolio-fullproject/client/src/components/adminpages/ProjectPage/UpdateProjectModal.js"],"sourcesContent":["// e:\\RSD-REACT-PROJECTS\\Portfolio-fullproject\\client\\src\\components\\adminpages\\ProjectPage\\UpdateProjectModal.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner, Image, CloseButton } from 'react-bootstrap'; // Added Image, CloseButton\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { updateProject } from '../../../features/products/projectSlice';\r\n\r\n// Helper to convert array to comma-separated string for form fields\r\nconst arrayToCommaString = (arr) => (Array.isArray(arr) ? arr.join(', ') : arr || '');\r\n\r\nconst UpdateProjectModal = ({ show, handleClose, projectData }) => {\r\n    const dispatch = useDispatch();\r\n    const initialFormData = {\r\n        projectName: '',\r\n        projectDescription: '',\r\n        projectGitHubLink: '',\r\n        projectLiveLink: '',\r\n        projectTechStack: '',\r\n        projectFeatures: '',\r\n    };\r\n    const [updatedProjectData, setUpdatedProjectData] = useState(initialFormData);\r\n    // State for new files to upload\r\n    const [newProjectFiles, setNewProjectFiles] = useState([]);\r\n    // State to track which existing images to delete\r\n    const [imagesToDelete, setImagesToDelete] = useState([]);\r\n    // State to display current images (filtered by imagesToDelete)\r\n    const [currentImages, setCurrentImages] = useState([]);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    // --- Populate form when projectData changes (modal opens) ---\r\n    useEffect(() => {\r\n        if (projectData) {\r\n            console.log(\"Project Data Received:\", projectData); // Debug log\r\n            setUpdatedProjectData({\r\n                projectName: projectData.projectName || '',\r\n                projectDescription: projectData.projectDescription || '',\r\n                projectGitHubLink: projectData.projectGitHubLink || '',\r\n                projectLiveLink: projectData.projectLiveLink || '',\r\n                projectTechStack: arrayToCommaString(projectData.projectTechStack),\r\n                projectFeatures: arrayToCommaString(projectData.projectFeatures),\r\n            });\r\n            // Initialize current images and reset deletions/new files\r\n            setCurrentImages(projectData.projectMultiImages || []);\r\n            setImagesToDelete([]);\r\n            setNewProjectFiles([]);\r\n            setIsSaving(false);\r\n        } else {\r\n            // Reset when projectData is null (e.g., modal closed improperly)\r\n            setUpdatedProjectData(initialFormData);\r\n            setCurrentImages([]);\r\n            setImagesToDelete([]);\r\n            setNewProjectFiles([]);\r\n        }\r\n    }, [projectData]); // Re-run effect when projectData prop changes\r\n    // -----------------------------------------------------------\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUpdatedProjectData(prevData => ({\r\n            ...prevData,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    // Handle new file input\r\n    const handleFileChange = (e) => {\r\n        setNewProjectFiles(Array.from(e.target.files)); // Store as an array\r\n    };\r\n\r\n    // Handle marking an existing image for deletion\r\n    const handleMarkForDelete = (imageIdentifier) => {\r\n        // Use the unique identifier (e.g., URL or public_id)\r\n        console.log(\"Marking for delete:\", imageIdentifier); // Debug log\r\n        setImagesToDelete(prev => [...prev, imageIdentifier]);\r\n        // Visually remove it from the displayed current images\r\n        setCurrentImages(prev => prev.filter(img => (img.public_id || img.url) !== imageIdentifier));\r\n    };\r\n\r\n    const validateForm = () => {\r\n        if (!updatedProjectData.projectName || !updatedProjectData.projectDescription) {\r\n            toast.error('Project Name and Description are required.');\r\n            return false;\r\n        }\r\n        if (!projectData?._id) {\r\n            toast.error('Cannot update project without a valid ID.');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const handleSaveChanges = async (e) => {\r\n        e.preventDefault();\r\n        if (!validateForm()) return;\r\n        setIsSaving(true);\r\n\r\n        // --- Create Payload using FormData ---\r\n        const formData = new FormData();\r\n\r\n        // Append text fields\r\n        Object.keys(updatedProjectData).forEach(key => {\r\n            // Handle potential arrays from comma-separated strings if needed by backend\r\n            if (key === 'projectTechStack' || key === 'projectFeatures') {\r\n                // Example: Split string into an array before sending if backend expects array\r\n                // const valueArray = updatedProjectData[key].split(',').map(item => item.trim()).filter(Boolean);\r\n                // valueArray.forEach(item => formData.append(`${key}[]`, item));\r\n                // Or append the string directly if backend handles splitting/parsing\r\n                formData.append(key, updatedProjectData[key]);\r\n            } else {\r\n                formData.append(key, updatedProjectData[key]);\r\n            }\r\n        });\r\n\r\n        // Append new files if any\r\n        // 'newProjectMultiImages' should match the field name your backend expects for *new* uploads\r\n        if (newProjectFiles.length > 0) {\r\n            for (let i = 0; i < newProjectFiles.length; i++) {\r\n                formData.append('newProjectMultiImages', newProjectFiles[i]);\r\n            }\r\n        }\r\n\r\n        // Append IDs/URLs of images to delete (backend needs to parse this)\r\n        // Sending as JSON string is common\r\n        if (imagesToDelete.length > 0) {\r\n            formData.append('imagesToDelete', JSON.stringify(imagesToDelete));\r\n        }\r\n        // ----------------------\r\n\r\n        // Log FormData contents (for debugging)\r\n        console.log(\"Updating project with FormData:\");\r\n        for (let [key, value] of formData.entries()) {\r\n            console.log(key, value);\r\n        }\r\n        console.log(\"Project ID:\", projectData._id);\r\n\r\n\r\n        try {\r\n            // Dispatch the updateProject action\r\n            // The thunk needs to handle FormData and send the ID correctly (e.g., in URL)\r\n            // In UpdateProjectModal.js\r\n            await dispatch(updateProject({ id: projectData._id, updates: formData })).unwrap();\r\n            toast.success(\"Project updated successfully!\");\r\n            handleModalClose(); // Close modal on success\r\n\r\n\r\n        } catch (error) {\r\n            console.error(\"Failed to update project:\", error);\r\n            // Attempt to get a more specific error message\r\n            const errorMessage = error?.message || (typeof error === 'string' ? error : \"Failed to update project. Check console.\");\r\n            toast.error(errorMessage);\r\n        } finally {\r\n            setIsSaving(false);\r\n        }\r\n    };\r\n\r\n    // Use a separate close handler for this modal\r\n    const handleModalClose = () => {\r\n        // Reset local state before calling parent handler\r\n        setUpdatedProjectData(initialFormData);\r\n        setNewProjectFiles([]);\r\n        setImagesToDelete([]);\r\n        setCurrentImages([]); // Clear displayed images\r\n        setIsSaving(false);\r\n        handleClose(); // Call parent close handler\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleModalClose} size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Update Project</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {!projectData ? (\r\n                    <div className=\"text-center\"><Spinner animation=\"border\" /> Loading data...</div>\r\n                ) : (\r\n                    <>\r\n                        {/* Ensure Form doesn't have encType, JS handles it */}\r\n                        <Form onSubmit={handleSaveChanges}>\r\n                            {/* Text Fields (Project Name, Description, Links, Tech, Features) */}\r\n                            {/* Project Name */}\r\n                            <Form.Group className=\"mb-3\" controlId=\"updateFormProjectName\">\r\n                                <Form.Label>Project Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"projectName\"\r\n                                    value={updatedProjectData.projectName}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                    disabled={isSaving}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            {/* Description */}\r\n                            <Form.Group className=\"mb-3\" controlId=\"updateFormProjectDescription\">\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    name=\"projectDescription\"\r\n                                    value={updatedProjectData.projectDescription}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                    disabled={isSaving}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            {/* GitHub Link */}\r\n                            <Form.Group className=\"mb-3\" controlId=\"updateFormProjectGitHubLink\">\r\n                                <Form.Label>GitHub Link</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"url\"\r\n                                    placeholder=\"https://github.com/...\"\r\n                                    name=\"projectGitHubLink\"\r\n                                    value={updatedProjectData.projectGitHubLink}\r\n                                    onChange={handleInputChange}\r\n                                    disabled={isSaving}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            {/* Live Link */}\r\n                            <Form.Group className=\"mb-3\" controlId=\"updateFormProjectLiveLink\">\r\n                                <Form.Label>Live Link</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"url\"\r\n                                    placeholder=\"https://yourproject.com\"\r\n                                    name=\"projectLiveLink\"\r\n                                    value={updatedProjectData.projectLiveLink}\r\n                                    onChange={handleInputChange}\r\n                                    disabled={isSaving}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            {/* Tech Stack */}\r\n                            <Form.Group className=\"mb-3\" controlId=\"updateFormProjectTechStack\">\r\n                                <Form.Label>Tech Stack (comma-separated)</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"React, Node.js, MongoDB\"\r\n                                    name=\"projectTechStack\"\r\n                                    value={updatedProjectData.projectTechStack}\r\n                                    onChange={handleInputChange}\r\n                                    disabled={isSaving}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            {/* Features */}\r\n                            <Form.Group className=\"mb-3\" controlId=\"updateFormProjectFeatures\">\r\n                                <Form.Label>Features (comma-separated)</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Feature 1, Feature 2\"\r\n                                    name=\"projectFeatures\"\r\n                                    value={updatedProjectData.projectFeatures}\r\n                                    onChange={handleInputChange}\r\n                                    disabled={isSaving}\r\n                                />\r\n                            </Form.Group>\r\n\r\n\r\n                            {/* --- Image Handling --- */}\r\n                            <Form.Group controlId=\"updateFormProjectImages\" className=\"mb-3\">\r\n                                <Form.Label>Current Images</Form.Label>\r\n                                <div className=\"d-flex flex-wrap align-items-start\">\r\n                                    {currentImages && currentImages.length > 0 ? (\r\n                                        currentImages.map((img, index) => {\r\n                                            // Determine the unique key/identifier for deletion\r\n                                            const imageIdentifier = img.public_id || img.url || `img-${index}`; // Fallback key\r\n                                            const imageUrl = img.url || img; // Handle if structure is just array of URLs\r\n\r\n                                            // Ensure we have a valid URL before rendering\r\n                                            if (!imageUrl) {\r\n                                                console.warn(\"Skipping image render due to missing URL:\", img);\r\n                                                return null;\r\n                                            }\r\n\r\n                                            return (\r\n                                                <div key={imageIdentifier} className=\"position-relative me-2 mb-2 border p-1\">\r\n                                                    <Image\r\n                                                        src={imageUrl}\r\n                                                        alt={`Current project image ${index + 1}`}\r\n                                                        thumbnail\r\n                                                        style={{ width: '100px', height: 'auto', objectFit: 'cover' }}\r\n                                                    />\r\n                                                    <CloseButton\r\n                                                        className=\"position-absolute top-0 end-0 bg-danger bg-opacity-75 text-white rounded-circle p-1\"\r\n                                                        style={{ transform: 'translate(30%, -30%)', width: '1.2rem', height: '1.2rem', lineHeight: '0.5' }}\r\n                                                        title=\"Mark for deletion\"\r\n                                                        onClick={() => handleMarkForDelete(imageIdentifier)}\r\n                                                        disabled={isSaving}\r\n                                                        aria-label=\"Mark image for deletion\"\r\n                                                    />\r\n                                                </div>\r\n                                            );\r\n                                        })\r\n                                    ) : (\r\n                                        <p><small>No current images.</small></p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <Form.Label className=\"mt-3\">Add New Images</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"file\"\r\n                                    onChange={handleFileChange}\r\n                                    multiple\r\n                                    disabled={isSaving}\r\n                                    // Add accept attribute for better UX\r\n                                    accept=\"image/png, image/jpeg, image/gif, image/webp\"\r\n                                />\r\n                                {newProjectFiles.length > 0 && (\r\n                                    <Form.Text className=\"text-muted\">\r\n                                        {newProjectFiles.length} new file(s) selected. Previous images marked for deletion will be removed upon saving.\r\n                                    </Form.Text>\r\n                                )}\r\n                            </Form.Group>\r\n                            {/* ------------------------------------- */}\r\n\r\n\r\n                            <div className=\"d-flex justify-content-end mt-4\">\r\n                                <Button variant=\"secondary\" onClick={handleModalClose} className=\"me-2\" disabled={isSaving}>\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button variant=\"primary\" type=\"submit\" disabled={isSaving}>\r\n                                    {isSaving ? <><Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> Saving...</> : 'Save Changes'}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </>\r\n                )}\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default UpdateProjectModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}